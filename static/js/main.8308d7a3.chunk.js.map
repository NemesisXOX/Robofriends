{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","Searchbox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","className","alt","src","this","props","id","name","email","React","Component","CardList","robots","CardComponet","map","user","i","Searchbox","searchfield","searchchange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onsearchchange","event","setState","target","value","state","fetch","response","json","users","filterrobots","filter","robot","toLowerCase","includes","react","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yDCSCQ,E,4JAbX,WACI,OACA,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BC,KAAKC,MAAMC,GAArC,cACrB,gCACI,6BAAKF,KAAKC,MAAME,OAChB,4BAAIH,KAAKC,MAAMG,kB,GAPZC,IAAMC,WCUVC,EATA,SAAC,GAAc,IAAZC,EAAW,EAAXA,OACRC,EAAeD,EAAOE,KAAI,SAACC,EAAKC,GAAO,OAAO,cAAC,EAAD,CAAcV,GAAIM,EAAOI,GAAGV,GAAIC,KAAMK,EAAOI,GAAGT,KAAMC,MAAOI,EAAOI,GAAGR,OAA5DQ,MAC/D,OACI,8BACKH,KCOEI,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,8BACI,uBAAOlB,UAAU,mCACjBmB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIPI,G,mKATX,WACI,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKvB,KAAKC,MAAMuB,e,GAJPnB,IAAMC,YC4CZmB,E,kDArCX,aAAc,IAAD,8BACT,gBAgBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACd,YAAaa,EAAME,OAAOC,SAhBzC,EAAKC,MAAM,CACPvB,OAAQ,GACRM,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfkB,MAAM,8CAA8C1C,MAAK,SAAA2C,GACrD,OAAOA,EAASC,UACjB5C,MAAK,SAAA6C,GACJ,EAAKP,SAAS,CAACpB,OAAQ2B,S,oBAQ/B,WAAS,IAAD,OACEC,EAAepC,KAAK+B,MAAMvB,OAAO6B,QAAO,SAAAC,GAC1C,OAAOA,EAAMnC,KAAKoC,cAAcC,SAAS,EAAKT,MAAMjB,YAAYyB,kBAEpE,OACI,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWkB,aAAcf,KAAK0B,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAS4B,a,GA9BrBK,IAAMnC,WCDxBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.8308d7a3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nclass Card extends React.Component{\r\n    render(){\r\n        return(\r\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${this.props.id}?200x200`}></img>\r\n            <div>\r\n                <h2>{this.props.name}</h2>\r\n                <p>{this.props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Card;","import react from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({ robots })=>{\r\n    const CardComponet = robots.map((user,i) =>{ return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>} );\r\n    return(\r\n        <div>\r\n            {CardComponet}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import react from 'react';\r\n\r\nconst Searchbox = ({searchfield, searchchange}) =>{\r\n    return(\r\n        <div >\r\n            <input className='pa2 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchchange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nclass Scroll extends React.Component{\r\n    render(){\r\n        return(\r\n            <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n                {this.props.children}\r\n            </div>\r\n            );\r\n        }\r\n};\r\n\r\nexport default Scroll;","import { render } from '@testing-library/react';\r\nimport react from 'react';\r\nimport CardList from './CardList';\r\nimport { robots } from './robots';\r\nimport Searchbox from './Searchbox';\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\n\r\nclass App extends react.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n            return response.json();\r\n        }).then(users =>{\r\n            this.setState({robots: users});\r\n        })\r\n        \r\n    }\r\n    \r\n    onsearchchange = (event) =>{\r\n        this.setState({searchfield: event.target.value});   \r\n    }\r\n    render(){\r\n        const filterrobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        return(\r\n            <div className='tc'>\r\n                <h1 className='f1'>ROBOFRIENDS</h1>\r\n                <Searchbox searchchange={this.onsearchchange}/>\r\n                <Scroll>\r\n                    <CardList robots={ filterrobots }/>\r\n                </Scroll> \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}